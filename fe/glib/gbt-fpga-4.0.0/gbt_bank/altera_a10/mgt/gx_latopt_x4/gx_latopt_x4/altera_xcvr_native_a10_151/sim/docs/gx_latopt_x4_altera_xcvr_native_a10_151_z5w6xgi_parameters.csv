NAME,DISPLAY_NAME,ALLOWED_RANGES,DEFAULT_VALUE,DESCRIPTION
"device_family","device_family","","Arria 10",""
"device","device","","Unknown",""
"base_device","base_device","","nightfury5es",""
"design_environment","design_environment","","NATIVE",""
"message_level","Message level for rule violations","error warning","error","Specifies the messaging level to use for parameter rule violations. Selecting "error" causes all rule violations to prevent IP generation. Selecting "warning" displays all rule violations as warnings and allows IP generation in spite of violations."
"anlg_voltage","VCCR_GXB and VCCT_GXB supply voltage for the Transceiver","1_1V 1_0V 0_9V","1_1V","Selects the VCCR_GXB and VCCT_GXB supply voltage for the Transceiver."
"anlg_link","Tranceiver Link Type","sr lr","sr","Selects the type of transceiver link. SR-Short Reach (Chip-to-chip communication), LR-Long Reach (Backplane communication)"
"protocol_mode","Transceiver configuration rules","{basic_std:Basic/Custom (Standard PCS)} {basic_std_rm:Basic/Custom w/Rate Match (Standard PCS)} {cpri:CPRI (Auto)} {cpri_rx_tx:CPRI (Manual)} gige:GbE {gige_1588:GbE 1588} {pipe_g1:Gen 1 PIPE} {pipe_g2:Gen 2 PIPE} {pipe_g3:Gen 3 PIPE} {basic_enh:Basic (Enhanced PCS)} interlaken_mode:Interlaken teng_baser_mode:10GBASE-R {teng_1588_mode:10GBASE-R 1588} {teng_baser_krfec_mode:10GBASE-R w/KR FEC} {fortyg_basekr_krfec_mode:40GBASE-R w/KR FEC} {basic_krfec_mode:Basic w/KR FEC} {pcs_direct:PCS Direct}","basic_std","Selects the protocol configuration rules for the transceiver. This parameter governs the rules for correct settings of individual parameters within the PMA and PCS. Certain features of the transceiver are available only for specific protocol configuration rules. This parameter is not a "preset". You must still correctly set all other parameters for your specific protocol and application needs."
"pma_mode","PMA configuration rules","basic SATA:SATA/SAS QPI GPON","basic","Selects the configuration rules for PMA. Options are SATA/SAS, GPON, QPI and basic. Basic should be selected for all modes other than SATA/SAS, GPON, and QPI. SATA/SAS mode can be used only if "Transceiver configuration rules" is selected as Standard PCS. GPON mode can be used only if "Transceiver configuration rules" is selected as Standard or Enhanced PCS. QPI mode can be used only if "Transceiver configuration rules" is selected as PCS Direct. This parameter is not a "preset". You must still correctly set other parameters and enable relavant ports for your specific application needs."
"duplex_mode","Transceiver mode","{duplex:TX/RX Duplex} {tx:TX Simplex} {rx:RX Simplex}","duplex","Selects the transceiver operation mode."
"channels","Number of data channels","1:96","1","Specifies the total number of data channels."
"set_data_rate","Data rate","","1250","Specifies the transceiver data rate in units of Mbps (megabits per second)."
"rcfg_iface_enable","Enable datapath and interface reconfiguration","{0 1}","0","Enables the ability to preconfigure and dynamically switch between the Standard PCS, Enhanced PCS, and PCS direct transceiver datapaths."
"enable_simple_interface","Enable simplified data interface","{0 1}","0","When selected the Native PHY presents a simplified data and control interface between the FPGA and transceiver. When not selected the Native PHY presents the full raw data interface to the transceiver. You need to understand the mapping of data and control signals within the interface. This option cannot be enabled if you want to perform dynamic interface reconfiguration as only a fixed subset of the data and control signals are provided."
"enable_split_interface","Provide separate interface for each channel","{0 1}","0","When selected the Native PHY presents separate data, reset, and clock interfaces for each channel rather than a wide bus."
"set_disconnect_analog_resets","Disconnect analog resets","{0 1}","0","When selected the Native PHY will disconnect the tx_analogreset and rx_analogreset. This can be enabled only after consultation with Altera factory/applications."
"enable_transparent_pcs","Enable transparent PCS","{0 1}","0",""
"bonded_mode","TX channel bonding mode","{not_bonded:Not bonded} {pma_only:PMA only bonding} {pma_pcs:PMA and PCS bonding}","not_bonded","Specifies the transceiver TX channel bonding mode to control channel-to-channel skew for the TX datapath. Refer to the user guide for bonding details. Options are no TX channel bonding (non-bonded); PMA only channel bonding; or PMA & PCS channel bonding."
"set_pcs_bonding_master","PCS TX channel bonding master","Auto 0 1 2 3","Auto","Specifies the master PCS channel for PCS bonded configurations. Refer to the user guide for bonding details. Selecting 'Auto' allows the Native PHY to automatically select a recommended channel."
"enable_port_tx_analog_reset_ack","Enable tx_analog_reset_ack port","{0 1}","0","Enables the optional tx_pma_analog_reset_ack output. This port should not be used for register mode data transfers."
"enable_port_tx_pma_clkout","Enable tx_pma_clkout port","{0 1}","0","Enables the optional tx_pma_clkout output clock. This is the parallel clock from the TX PMA. This port is not to be used to clock the data interface."
"enable_port_tx_pma_div_clkout","Enable tx_pma_div_clkout port","{0 1}","0","Enables the optional tx_pma_div_clkout output clock. This port should not be used for register mode data transfers."
"enable_port_tx_pma_iqtxrx_clkout","Enable tx_pma_iqtxrx_clkout port","{0 1}","0","Enables the optional tx_pma_iqtxrx_clkout output clock. This clock can be used to cascade the TX PMA output clock to the input of a PLL."
"enable_port_tx_pma_elecidle","Enable tx_pma_elecidle port","{0 1}","0","Enables the optional tx_pma_elecidle control input port. The assertion of this signal forces the transmitter into an electrical idle condition. Note that this port has no effect when the transceiver is configured for PCI express modes."
"enable_port_tx_pma_qpipullup","Enable tx_pma_qpipullup port (QPI)","{0 1}","0","Enables the tx_pma_qpipullup control input port. This port is used only in QPI applications."
"enable_port_tx_pma_qpipulldn","Enable tx_pma_qpipulldn port (QPI)","{0 1}","0","Enables the tx_pma_qpipulldn control input port. This port is used only in QPI applications."
"enable_port_tx_pma_txdetectrx","Enable tx_pma_txdetectrx port (QPI)","{0 1}","0","Enables the tx_pma_txdetectrx control input port. This port is used only in QPI applications. The receiver detect block in TX PMA detects the presence of a receiver at the other end of the channel. After receiving tx_pma_txdetectrx request the receiver detect block initiates the detection process."
"enable_port_tx_pma_rxfound","Enable tx_pma_rxfound port (QPI)","{0 1}","0","Enables the tx_rxfound status output port. This port is used only in QPI applications. The receiver detect block in TX PMA detects the presence of a receiver at the other end by using tx_pma_txdetectrx input. Detection of RX status is given on the tx_pma_rxfound port."
"enable_port_rx_seriallpbken_tx","Enable rx_seriallpbken port","{0 1}","0","Enables the optional rx_seriallpbken control input port. The assertion of this signal enables the TX to RX serial loopback path within the transceiver. This is an asynchronous input signal. This signal can be enabled in Duplex or Simplex mode. If enabled in Simplex mode, you must drive the signal on both the TX and RX instances from the same source. Otherwise the design fails compilation."
"cdr_refclk_cnt","Number of CDR reference clocks","1 2 3 4 5","1","Specifies the number of input reference clocks for the RX CDRs. The same bus of reference clocks feeds all RX CDRs in the netlist."
"cdr_refclk_select","Selected CDR reference clock","0","0","Specifies the initially selected reference clock input to the RX CDRs."
"set_cdr_refclk_freq","Selected CDR reference clock frequency","50.000000 50.526316 51.063830 51.612903 52.173913 52.747253 53.333333 53.932584 54.545455 55.172414 55.813953 56.470588 57.142857 57.831325 58.536585 59.259259 60.000000 60.759494 61.538462 62.337662 63.157895 64.000000 64.864865 65.753425 66.666667 67.605634 68.571429 69.565217 70.588235 71.641791 72.727273 73.846154 75.000000 76.190476 77.419355 78.688525 80.000000 81.355932 82.758621 84.210526 85.714286 87.272727 88.888889 90.566038 92.307692 94.117647 96.000000 97.959184 100.000000 101.052632 102.127660 103.225806 104.347826 105.494505 106.666667 107.865169 109.090909 110.344828 111.627907 112.941176 114.285714 115.662651 117.073171 118.518519 120.000000 121.518987 123.076923 124.675325 126.315789 128.000000 129.729730 131.506849 133.333333 135.211268 137.142857 139.130435 141.176471 143.283582 145.454545 147.692308 150.000000 152.380952 154.838710 157.377049 160.000000 162.711864 165.517241 168.421053 171.428571 174.545455 177.777778 181.132075 184.615385 188.235294 192.000000 195.918367 200.000000 202.105263 204.255319 206.451613 208.695652 210.989011 213.333333 215.730337 218.181818 220.689655 223.255814 225.882353 228.571429 231.325301 234.146341 237.037037 240.000000 243.037975 246.153846 249.350649 252.631579 256.000000 259.459459 263.013699 266.666667 270.422535 274.285714 278.260870 282.352941 286.567164 290.909091 295.384615 300.000000 304.761905 309.677419 314.754098 320.000000 325.423729 331.034483 336.842105 342.857143 349.090909 355.555556 362.264151 369.230769 376.470588 384.000000 391.836735 400.000000 404.210526 408.510638 412.903226 417.391304 421.978022 426.666667 431.460674 436.363636 441.379310 446.511628 451.764706 457.142857 462.650602 468.292683 474.074074 480.000000 486.075949 492.307692 498.701299 505.263158 512.000000 518.918919 526.027397 533.333333 540.845070 548.571429 556.521739 564.705882 573.134328 581.818182 590.769231 600.000000 609.523810 619.354839 629.508197 640.000000 650.847458 662.068966 673.684211 685.714286 698.181818 711.111111 724.528302 738.461538 752.941176 768.000000 783.673469 800.000000","125.000","Specifies the frequency in MHz of the selected reference clock input to the CDR."
"rx_ppm_detect_threshold","PPM detector threshold","100 300 500 1000","1000","Specifies the tolerable difference in PPM (parts per million) between the RX CDR reference clock and the recovered clock from the RX data input."
"rx_pma_ctle_adaptation_mode","CTLE adaptation mode","manual one-time:triggered","manual","Specifies the operation mode for Continuous Time Linear Equalizer (CTLE). Options are "manual" (where user is expected to set CTLE through qsf assignment or DPRIO) and "triggered" (where CTLE is adapted at user request - (i.e. resetting adaptation and requesting adaptation start through DPRIO)). CTLE boosts the near Nyquist frequency content of the received signal."
"rx_pma_dfe_adaptation_mode","DFE adaptation mode","continuous manual disabled","disabled","Specifies the operation mode for Decision Feedback Equalizer (DFE). Options are "disable" (where DFE is bypassed), "continuous" (where the DFE taps are adapted automatically), "manual" (where the DFE is expected to be configured manually by user through qsf assignments or DPRIO)."
"enable_ports_adaptation","Enable adaptation control ports","{0 1}","0","Enables the optional rx_adapt_reset, and rx_adapt_start ports. These ports are used to control the adaptation engine (adaptation engine can also be controlled through DPRIO interface). Even if they are exposed, the ports are not usable until they are activated through DPRIO interface. For adaptation engine control: user needs to apply the reset first, after releasing reset, assert the start. The adaptation status can be observed through DPRIO interface."
"enable_port_rx_analog_reset_ack","Enable rx_analog_reset_ack port","{0 1}","0","Enables the optional rx_analog_reset_ack output. This port should not be used for register mode data transfers."
"enable_port_rx_pma_clkout","Enable rx_pma_clkout port","{0 1}","0","Enables the optional rx_pma_clkout output clock. This is the recovered parallel clock from the RX CDR. This port is not to be used to clock the data interface."
"enable_port_rx_pma_div_clkout","Enable rx_pma_div_clkout port","{0 1}","0","Enables the optional rx_pma_div_clkout output clock. This port should not be used for register mode data transfers."
"enable_port_rx_pma_iqtxrx_clkout","Enable rx_pma_iqtxrx_clkout port","{0 1}","0","Enables the optional rx_pma_iqtxrx_clkout output clock. This clock can be used to cascade the RX PMA output clock to the input of a PLL."
"enable_port_rx_pma_clkslip","Enable rx_pma_clkslip port","{0 1}","0","Enables the optional rx_pma_clkslip control input port. A rising edge on this signal causes the RX serializer to slip the serial data by one clock cycle (2 UI)."
"enable_port_rx_pma_qpipulldn","Enable rx_pma_qpipulldn port (QPI)","{0 1}","0","Enables the rx_pma_qpipulldn control input port. This port is used only in QPI applications."
"enable_port_rx_is_lockedtodata","Enable rx_is_lockedtodata port","{0 1}","1","Enables the optional rx_is_lockedtodata status output port. This signal indicates that the RX CDR is currently in lock to data mode or is attempting to lock to the incoming data stream. This is an asynchronous output signal."
"enable_port_rx_is_lockedtoref","Enable rx_is_lockedtoref port","{0 1}","1","Enables the optional rx_is_lockedtoref status output port. This signal indicates that the RX CDR is currently locked to the CDR reference clock. This is an asynchronous output signal."
"enable_ports_rx_manual_cdr_mode","Enable rx_set_locktodata and rx_set_locktoref ports","{0 1}","0","Enables the optional rx_set_locktodata and rx_set_locktoref control input ports. These ports are used to manually control the lock mode of the RX CDR. These are asynchonous input signals."
"enable_port_rx_signaldetect","Enable rx_signaldetect port","{0 1}","0","Enables the optional rx_signaldetect status output port. The assertion of this signal indicates detection of an input signal to the RX PMA. Refer to the user guide for applications and limitations. This is an asynchronous output signal."
"enable_port_rx_seriallpbken","Enable rx_seriallpbken port","{0 1}","0","Enables the optional rx_seriallpbken control input port. The assertion of this signal enables the TX to RX serial loopback path within the transceiver. This is an asynchronous input signal. This signal can be enabled in Duplex or Simplex mode. If enabled in Simplex mode, you must drive the signal on both the TX and RX instances from the same source. Otherwise the design fails compilation."
"enable_ports_rx_prbs","Enable PRBS verifier control and status ports","{0 1}","0","Enables the optional rx_prbs_err, rx_prbs_err_clr, and rx_prbs_done ports. These ports are used to control and collect status from the internal PRBS verifier."
"std_pcs_pma_width","Standard PCS / PMA interface width","8 10 16 20","10","Specifies the data interface width between the 'Standard PCS' and the transceiver PMA."
"std_low_latency_bypass_enable","Enable 'Standard PCS' low latency mode","{0 1}","0","Enables the low latency path for the 'Standard PCS'. Enabling this option bypasses the individual functional blocks within the 'Standard PCS' to provide the lowest latency datapath from the PMA through the 'Standard PCS'."
"enable_hip","Enable PCIe hard IP support","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter indicates that the Native PHY variant will be connected to the PCIe hard IP."
"enable_hard_reset","Enable hard reset controller (HIP)","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter enables the hard reset controller for use with PCIe HIP."
"set_hip_cal_en","Enable PCIe hard IP calibration","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter prioritizes the calibration for PCIe hard IP channels."
"std_tx_pcfifo_mode","TX FIFO mode","low_latency register_fifo fast_register","low_latency","Specifies the mode for the 'Standard PCS' TX FIFO."
"std_rx_pcfifo_mode","RX FIFO mode","low_latency register_fifo","low_latency","Specifies the mode for the 'Standard PCS' RX FIFO."
"enable_port_tx_std_pcfifo_full","Enable tx_std_pcfifo_full port","{0 1}","0","Enables the optional tx_std_pcfifo_full status output port. This signal indicates when the standard TX phase compensation FIFO has reached the full threshold. This signal is synchronous with 'tx_std_clkout'."
"enable_port_tx_std_pcfifo_empty","Enable tx_std_pcfifo_empty port","{0 1}","0","Enables the optional tx_std_pcfifo_empty status output port. This signal indicates when the standard RX phase compensation FIFO has reached the empty threshold. This signal is synchronous with 'tx_std_clkout'."
"enable_port_rx_std_pcfifo_full","Enable rx_std_pcfifo_full port","{0 1}","0","Enables the optional rx_std_pcfifo_full status output port. This signal indicates when the standard RX phase compensation FIFO has reached the full threshold. This signal is synchronous with 'rx_std_clkout'."
"enable_port_rx_std_pcfifo_empty","Enable rx_std_pcfifo_empty port","{0 1}","0","Enables the optional rx_std_pcfifo_empty status output port. This signal indicates when the standard RX phase compensation FIFO has reached the full threshold. This signal is synchronous with 'rx_std_clkout'."
"std_tx_byte_ser_mode","TX byte serializer mode","Disabled {Serialize x2} {Serialize x4}","Disabled","Specifies the mode for the TX byte serializer in the 'Standard PCS'. The transceiver architecture allows the 'Standard PCS' to operate at double or quadruple the data width of the PMA serializer. This allows the PCS to run at a lower internal clock frequency and accommodate a wider range of FPGA interface widths. This option is limited by the target protocol mode."
"std_rx_byte_deser_mode","RX byte deserializer mode","Disabled {Deserialize x2} {Deserialize x4}","Disabled","Specifies the mode for the RX byte deserializer in the 'Standard PCS' The transceiver architecture allows the 'Standard PCS' to operate at double or quadruple the data width of the PMA deserializer. This allows the PCS to run at a lower internal clock frequency and accommodate a wider range of FPGA interface widths. This option is limited by the target protocol mode."
"std_tx_8b10b_enable","Enable TX 8B/10B encoder","{0 1}","0","Enables the 8B/10B encoder in the 'Standard PCS'."
"std_tx_8b10b_disp_ctrl_enable","Enable TX 8B/10B disparity control","{0 1}","0","Enables disparity control for the 8B/10B encoder. This allows you to force the disparity of the 8b10b encoder via the 'tx_forcedisp' control signal."
"std_rx_8b10b_enable","Enable RX 8B/10B decoder","{0 1}","0","Enables the 8B/10B decoder in the 'Standard PCS'."
"std_rx_rmfifo_mode","RX rate match FIFO mode","disabled:Disabled {basic (single width):Basic 10-bit PMA} {basic (double width):Basic 20-bit PMA} gige:GbE pipe:PIPE {pipe 0ppm:PIPE 0ppm}","disabled","Specifies the operation mode of the RX rate match FIFO in the 'Standard PCS'."
"std_rx_rmfifo_pattern_n","RX rate match insert/delete -ve pattern (hex)","-2147483648:2147483647","0","Specifies the -ve (negative) disparity value for the RX rate match FIFO. The value is 20 bits and specified as a hexadecimal string."
"std_rx_rmfifo_pattern_p","RX rate match insert/delete +ve pattern (hex)","-2147483648:2147483647","0","Specifies the +ve (positive) disparity value for the RX rate match FIFO. The value is 20 bits and specified as a hexadecimal string."
"enable_port_rx_std_rmfifo_full","Enable rx_std_rmfifo_full port","{0 1}","0","Enables the optional rx_std_rmfifo_full status output port. This signal indicates when the standard RX rate match FIFO has reached the full threshold."
"enable_port_rx_std_rmfifo_empty","Enable rx_std_rmfifo_empty port","{0 1}","0","Enables the optional rx_std_rmfifo_empty status output port. This signal indicates when the standard RX rate match FIFO has reached the empty threshold."
"pcie_rate_match","PCI Express Gen 3 rate match FIFO mode","Bypass {0 ppm} {600 ppm}","Bypass","Specifies the PPM tolerance mode of the PCI Express Gen 3 rate match FIFO."
"std_tx_bitslip_enable","Enable TX bitslip","{0 1}","0","Enables TX bitslip support. When enabled, the outgoing transmit data can be slipped a specific number of bits as specified by the 'tx_bitslipboundarysel' control signal."
"enable_port_tx_std_bitslipboundarysel","Enable tx_std_bitslipboundarysel port","{0 1}","0","Enables the optional tx_std_bitslipboundarysel control input port."
"std_rx_word_aligner_mode","RX word aligner mode","bitslip {manual (PLD controlled):manual (FPGA Fabric controlled)} {synchronous state machine} {deterministic latency}","bitslip","Specifies the RX word aligner mode for the 'Standard PCS'."
"std_rx_word_aligner_pattern_len","RX word aligner pattern length","7 8 10 16 20 32 40","7","Specifies the RX word alignment pattern length."
"std_rx_word_aligner_pattern","RX word aligner pattern (hex)","","0","Specifies the RX word alignment pattern."
"std_rx_word_aligner_rknumber","Number of word alignment patterns to achieve sync","0:255","3","Specifies the number of valid word alignment patterns that must be received before the word aligner achieves sync lock."
"std_rx_word_aligner_renumber","Number of invalid data words to lose sync","0:63","3","Specifies the number of invalid data codes or disparity errors that must be received before the word aligner loses sync lock."
"std_rx_word_aligner_rgnumber","Number of valid data words to decrement error count","0:255","3","Specifies the number of valid data codes that must be received to decrement the error counter. If enough valid data codes are received to decrement the error count to zero the word aligner returns to sync lock."
"std_rx_word_aligner_rvnumber","Number of valid data patterns required to achieve word alignment","0:8191","0","Intended to be used only for SRIO V2.1."
"std_rx_word_aligner_fast_sync_status_enable","Enable fast sync status reporting for deterministic latency SM","{0 1}","0","If this parameter is selected, the word align status signal is asserted high once cycle slip operation between PCS and PMA is done. Otherwise the word align status is asserted after the cycle slip operation is done and it is detected that the word align pattern comes in aligned to the PCS. This parameter selection takes effect only if the selected protocol mode is CPRI (Auto)."
"enable_port_rx_std_wa_patternalign","Enable rx_std_wa_patternalign port","{0 1}","0","Enables the optional rx_std_wa_patternalign control input port. A rising edge on this signal causes the word aligner to align to the next incoming word alignment pattern when the word aligner is configured in "manual" mode."
"enable_port_rx_std_wa_a1a2size","Enable rx_std_wa_a1a2size port","{0 1}","0","Enables the optional rx_std_a1a2size control input port."
"enable_port_rx_std_bitslipboundarysel","Enable rx_std_bitslipboundarysel port","{0 1}","0","Enables the optional rx_std_bitslipboundarysel status output port."
"enable_port_rx_std_bitslip","Enable rx_bitslip port","{0 1}","0","Enables the optional rx_bitslip control input port. This is the shared RX bitslip control port for the Standard and Enhanced PCS datapaths."
"std_tx_bitrev_enable","Enable TX bit reversal","{0 1}","0","Enables transmitter bit order reversal. When enabled, the TX parallel data is reversed before passing to the PMA for serialization. When bit reversal is activated the transmitted TX data bit order changes to MSB->LSB rather than the normal LSB->MSB. This is a static setting and can only be dynamically changed through dynamic reconfiguration."
"std_tx_byterev_enable","Enable TX byte reversal","{0 1}","0","Enables transmitter byte order reversal. When the PCS / PMA interface width is 16 or 20 bits the PCS can swap the ordering of the individual 8-bit or 10-bit words. This option is not valid under all protocol modes."
"std_tx_polinv_enable","Enable TX polarity inversion","{0 1}","0","Enables TX bit polarity inversion. When enabled, the 'tx_polinv' control port controls polarity inversion of the TX parallel data bits before passing to the PMA."
"enable_port_tx_polinv","Enable tx_polinv port","{0 1}","0","Enables the optional tx_polinv control input port. When TX bit polarity inversion is enabled the assertion of this signal causes the TX bit polarity to be inverted."
"std_rx_bitrev_enable","Enable RX bit reversal","{0 1}","0","Enables receiver bit order reversal. When enabled, the 'rx_std_bitrev_ena' control port controls bit reversal of the RX parallel data after passing from the PMA to the PCS. When bit reversal is activated the received RX data bit order changes to MSB->LSB rather than the normal LSB->MSB"
"enable_port_rx_std_bitrev_ena","Enable rx_std_bitrev_ena port","{0 1}","0","Enables the optional rx_std_bitrev_ena control input port. When receiver bit order reversal is enabled the assertion of this signal causes the received RX data bit order to be changed to MSB->LSB rather than the normal LSB->MSB. This is an asynchronous input signal."
"std_rx_byterev_enable","Enable RX byte reversal","{0 1}","0","Enables receiver byte order reversal. When the PCS / PMA interface width is 16 or 20 bits the PCS can swap the ordering of the individual 8- or 10-bit words. When enabled, the 'rx_std_byterev_ena' port controls byte swapping. This option is not valid under all protocol modes."
"enable_port_rx_std_byterev_ena","Enable rx_std_byterev_ena port","{0 1}","0","Enables the optional rx_std_byterev_ena control input port. When receiver byte order reversal is enabled the assertion of this signal swaps the order of individual 8- or 10-bit words received from the PMA."
"std_rx_polinv_enable","Enable RX polarity inversion","{0 1}","0","Enables RX bit polarity inversion. When enabled, the 'rx_polinv' control port controls polarity inversion of the RX parallel data bits after passing from the PMA."
"enable_port_rx_polinv","Enable rx_polinv port","{0 1}","0","Enables the optional rx_polinv control input port. When RX bit polarity inversion is enabled the assertion of this signal causes the RX bit polarity to be inverted."
"enable_port_rx_std_signaldetect","Enable rx_std_signaldetect port","{0 1}","0","Enables the optional rx_std_signaldetect status output port. The assertion of this signal indicates that a signal has been detected on the receiver. The signal detect threshold can be specified through Quartus QSF assignments."
"enable_ports_pipe_sw","Enable PCIe dynamic datarate switch ports","{0 1}","0","Enables the pipe_rate; pipe_sw; and pipe_sw_done ports. These ports must be connected to the PLL IP instance in multi-lane PCI Express Gen 2 and Gen 3 configurations. The 'pipe_sw' and 'pipe_sw_done' ports are only exposed for multi-lane bonded configurations."
"enable_ports_pipe_hclk","Enable PCIe pipe_hclk_in and pipe_hclk_out ports","{0 1}","0","Enables the pipe_hclk_in and pipe_hclk_out ports. These ports must be connected to the PLL IP instance in PCI Express configurations."
"enable_ports_pipe_g3_analog","Enable PCIe Gen 3 analog control ports","{0 1}","0","Enables the pipe_g3_txdeemph and pipe_g3_rxpresethint ports. These ports are used to control the PMA in PCI Express Gen 3 configurations."
"enable_ports_pipe_rx_elecidle","Enable PCIe electrical idle control and status ports","{0 1}","0","Enables the pipe_rx_eidleinfersel and pipe_rx_elecidle ports. These ports are used for PCI Express configurations."
"enable_port_pipe_rx_polarity","Enable PCIe pipe_rx_polarity port","{0 1}","0","Enables the pipe_rx_polarity input control port. This port controls channel signal polarity for PCI Express configurations. When the 'Standard PCS datapath' is configured for PCIe protocol modes, the assertion of this signal causes the RX bit polarity to be inverted. For other protocol modes the optional 'rx_polinv' port controls RX bit polarity inversion."
"generate_docs","Generate parameter documentation file","{0 1}","1","When enabled, generation produces a Comma-Separated Value file (.csv) with descriptions of the Native PHY parameters."
"rcfg_enable","Enable dynamic reconfiguration","{0 1}","0","Enables the dynamic reconfiguration interface."
"rcfg_shared","Share reconfiguration interface","{0 1}","0","When enabled, the Native PHY presents a single Avalon-MM slave interface for dynamic reconfiguration of all channels. In this configuration the upper [n:9] address bits of the reconfiguration address bus specify the selected channel. Address bits [8:0] provide the register offset address within the reconfiguration space of the selected channel."
"rcfg_jtag_enable","Enable Altera Debug Master Endpoint","{0 1}","0","When enabled, the Native PHY includes an embedded Altera Debug Master Endpoint that connects internally Avalon-MM slave interface. The ADME can access the reconfiguration space of the transceiver. It can perform certain test and debug functions via JTAG using the System Console. This option requires you to enable the "Share reconfiguration interface" option for configurations using more than 1 channel and may also require that a jtag_debug link be included in the system."
"rcfg_separate_avmm_busy","Separate reconfig_waitrequest from the status of AVMM arbitration with PreSICE","{0 1}","0","When enabled, the reconfig_waitrequest will not indicate the status of AVMM arbitration with PreSICE.  The AVMM arbitration status will be reflected in a soft status register bit.  This feature requires that the "Enable control and status registers" feature under "Optional Reconfiguration Logic" be enabled.  For more information, please refer to the User Guide."
"rcfg_enable_avmm_busy_port","Enable avmm_busy port","{0 1}","0","Enable the port for avmm_busy"
"set_embedded_debug_enable","Enable embedded debug","{0 1}","0","Enables the embedded debug logic in the transceiver channel and grants access to capability registers, soft prbs accumulators and control and status registers"
"set_capability_reg_enable","Enable capability registers","{0 1}","0","Enables capability registers, which provide high level information about the transceiver channel's configuration."
"set_user_identifier","Set user-defined IP identifier","0:255","0","Sets a user-defined numeric identifier that can be read from the user_identifer offset when the capability registers are enabled."
"set_csr_soft_logic_enable","Enable control and status registers","{0 1}","0","Enables soft registers for reading status signals and writing control signals on the phy interface through the embedded debug. Signals include rx_is_locktoref, rx_is_locktodata, tx_cal_busy, rx_cal_busy, rx_serial_loopback, set_rx_locktodata, set_rx_locktoref, tx_analogreset, tx_digitalreset, rx_analogreset and rx_digitalreset. For more information, please refer to the User Guide."
"set_prbs_soft_logic_enable","Enable prbs soft accumulators","{0 1}","0","Enables soft logic for doing prbs bit and error accumulation when using the hard prbs generator and checker."
"set_odi_soft_logic_enable","Enable odi acceleration logic","{0 1}","0","Enables soft logic for accelerating bit and error accumulation when using ODI."
"rcfg_file_prefix","Configuration file prefix","","altera_xcvr_native_a10","Specifies the file prefix used for generating configuration files. Each variant of the Native PHY should use a unique prefix for configuration files."
"rcfg_sv_file_enable","Generate SystemVerilog package file","{0 1}","0","When enabled, The Native PHY generates a SystemVerilog package file, "<rcfg_file_prefix>_reconfig_parameters.sv", containing parameters defined with the attribute values needed for reconfiguration."
"rcfg_h_file_enable","Generate C header file","{0 1}","0","When enabled, The Native PHY generates a C header file, "<rcfg_file_prefix>_reconfig_parameters.h", containing macros defined with the attribute values needed for reconfiguration."
"rcfg_mif_file_enable","Generate MIF (Memory Initialization File)","{0 1}","0","When enabled, The Native PHY generates a MIF (Memory Initialization File), "<rcfg_file_prefix>_reconfig_parameters.mif", containing the attribute values needed for reconfiguration in a data format."
"rcfg_multi_enable","Enable multiple reconfiguration profiles","{0 1}","0","When enabled, you can use the GUI to store multiple configurations. This information is used by Quartus to include the necessary timing arcs for all configurations during timing driven compilation. The Native PHY generates reconfiguration files for all of the stored profiles. The Native PHY also checks your multiple reconfiguration profiles for consistency to ensure you can reconfigure between them. Among other things this checks that you have exposed the same ports for each configuration."
"enable_analog_settings","Include PMA analog settings in configuration files","{0 1}","0","When enabled, the IP allows you to configure the analog settings for the PMA. These settings will be included in your generated configuration files. NOTE - You must still specify the analog settings for your current configuration using Quartus II Setting File (.qsf) assignments in Quartus. This option does not remove the requirement to specify Quartus II Setting File (.qsf) assignments for your analog settings."
