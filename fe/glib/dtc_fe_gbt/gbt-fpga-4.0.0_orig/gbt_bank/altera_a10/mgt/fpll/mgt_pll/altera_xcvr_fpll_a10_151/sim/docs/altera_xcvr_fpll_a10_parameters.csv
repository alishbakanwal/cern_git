NAME,DISPLAY_NAME,ALLOWED_RANGES,DEFAULT_VALUE,DESCRIPTION
"rcfg_debug","rcfg_debug","0 1","0",""
"enable_pll_reconfig","Enable dynamic reconfiguration","{0 1}","0","Enables the dynamic reconfiguration interface."
"rcfg_jtag_enable","Enable Altera Debug Master Endpoint","{0 1}","0","When enabled, the PLL IP includes an embedded Altera Debug Master Endpoint that connects internally Avalon-MM slave interface. The ADME can access the reconfiguration space of the transceiver. It can perform certain test and debug functions via JTAG using the System Console. This option requires you to enable the "Share reconfiguration interface" option for configurations using more than 1 channel and may also require that a jtag_debug link be included in the system."
"rcfg_separate_avmm_busy","Separate reconfig_waitrequest from the status of AVMM arbitration with PreSICE","{0 1}","0","When enabled, the reconfig_waitrequest will not indicate the status of AVMM arbitration with PreSICE.  The AVMM arbitration status will be reflected in a soft status register bit.  This feature requires that the "Enable control and status registers" feature under "Optional Reconfiguration Logic" be enabled.  For more information, please refer to the User Guide."
"rcfg_enable_avmm_busy_port","Enable avmm_busy port","{0 1}","0","Enable the port for avmm_busy"
"set_capability_reg_enable","Enable capability registers","{0 1}","0","Enables capability registers, which provide high level information about the transceiver PLL's configuration"
"set_user_identifier","Set user-defined IP identifier","0:255","0","Sets a user-defined numeric identifier that can be read from the user_identifer offset when the capability registers are enabled"
"set_csr_soft_logic_enable","Enable control and status registers","{0 1}","0","Enables soft registers for reading status signals and writing control signals on the phy interface through the embedded debug. Available signals include pll_cal_busy, pll_locked and pll_powerdown.  For more details, please refer to the User Guide."
"rcfg_file_prefix","Configuration file prefix","","altera_xcvr_fpll_a10","Specifies the file prefix to use for generated configuration files when enabled. Each variant of the IP should use a unique prefix for configuration files."
"rcfg_sv_file_enable","Generate SystemVerilog package file","{0 1}","0","When enabled, The IP will generate a SystemVerilog package file named "(Configuration file prefix)_reconfig_parameters.sv" containing parameters defined with the attribute values needed for reconfiguration."
"rcfg_h_file_enable","Generate C header file","{0 1}","0","When enabled, The IP will generate a C header file named "(Configuration file prefix)_reconfig_parameters.h" containing macros defined with the attribute values needed for reconfiguration."
"rcfg_txt_file_enable","Generate text file","{0 1}","0","When enabled, The IP will generate a text file named "(Configuration file prefix)_reconfig_parameters.txt" containing the attribute values needed for reconfiguration."
"rcfg_mif_file_enable","Generate MIF (Memory Initialize File)","{0 1}","0","When enabled The IP will generate an Altera MIF (Memory Initialization File) named "(Configuration file prefix)_reconfig_parameters.mif". The MIF file contains the attribute values needed for reconfiguration in a data format."
"rcfg_multi_enable","Enable multiple reconfiguration profiles","{0 1}","0","When enabled, you can use the GUI to store multiple configurations. The IP will generate reconfiguration files for all of the stored profiles. The IP will also check your multiple reconfiguration profiles for consistency to ensure you can reconfigure between them."
"rcfg_profile_cnt","Number of reconfiguration profiles","2 3","2","Specifies the number of reconfiguration profiles to support when multiple reconfiguration profiles are enabled."
"rcfg_profile_select","Store current configuration to profile:","1","1","Selects which reconfiguration profile to store when clicking the "Store profile" button."
"rcfg_param_vals1","Profile 1","","",""
"rcfg_param_vals2","Profile 2","","",""
"gui_pll_set_hssi_m_counter","Multiply factor (M-counter)","0 1 2 3 4 5 6 7","1","Specifies the multiply factor (M counter)"
"gui_pll_set_hssi_n_counter","Divide factor (N-counter)","0 1 2 3 4 5 6 7","1","Specifies the divide factor (N counter)"
"gui_pll_set_hssi_l_counter","Divide factor (L-counter)","0 1 2 3 4 5 6 7","1","Specifies the divide factor (L counter)"
"gui_pll_set_hssi_k_counter","Divide factor (K-counter)","","1","Specifies the divide factor (K counter)"
"base_device","Device","","nightfury5es",""
"gui_fpll_mode","FPLL Mode","0:Core {1:Cascade Source} 2:Transceiver","2","Selects the primary operation mode of the FPLL (Core/Transceiver/Cascade source"
"gui_hssi_prot_mode","Protocol mode","0:Basic {1:PCIe Gen 1} {2:PCIe Gen 2} {3:PCIe Gen 3}","0","Governs the internal setting rules for the VCO. This parameter is not a preset. You must set all other parameters for your protocol."
"gui_refclk_switch","Create a second input clock 'pll_refclk1'","","false","Turn on this parameter to have a backup clock attached to your FPLL that can switch with your original reference clock"
"gui_refclk1_frequency","Second Reference Clock Frequency","","100.0","Specifies the second reference clock frequency for FPLL"
"gui_switchover_mode","Switchover Mode","{Automatic Switchover} {Manual Switchover} {Automatic Switchover with Manual Override}","Automatic Switchover","Specifies how Input frequency switchover will be handled. Automatic Switchover will use built in circuitry to detect if one of your input clocks has stopped toggling and switch to the other. Manual Switchover will create an EXTSWITCH signal which can be used to manually switch the clock by asserting high for atleast 3 cycles.  Automatic Switchover with Manual Override will perform act as Automatic Switchover until the EXTSWITCH goes high, in which case it will switch and ignore any automatic switches as long as EXTSWITCH stays high"
"gui_switchover_delay","Switchover Delays","0 1 2 3 4 5 6 7","0","Adds a specific amount of cycle delay to the Switchover Process."
"gui_enable_active_clk","Create an 'active_clk' signal to indicate the input clock in use","","false","This parameter creates an output which indicates which input clock is currently in use by the PLL. Low indicates refclk, High indicates refclk1."
"gui_enable_clk_bad","Create a 'clkbad' signal for each of the input clocks","","false","This parameter creates two CLKBAD outputs, one for each input clock. Low indicates the CLK is working, High indicates the CLK isn't working."
"generate_docs","Generate parameter documentation file","{0 1}","1","When enabled, generation will produce a .CSV file with descriptions of the IP parameters."
"generate_add_hdl_instance_example","Generate '_hw.tcl' 'add_hdl_instance' example file","{0 1}","0","When enabled, generation will produce a file containing an example of how to use the '_hw.tcl' 'add_hdl_instance' API. The example will be correct for the current configuration of the IP."
"gui_bw_sel","Bandwidth","low medium high","low",""
"gui_self_reset_enabled","PLL Auto Reset","","false","Automatically self-resets the PLL on loss of lock"
"silicon_rev","Silicon revision ES","","false",""
"gui_reference_clock_frequency","Reference clock frequency","","100.0",""
"gui_desired_refclk_frequency","Desired reference clock frequency","","100.0",""
"gui_actual_refclk_frequency","Actual reference clock frequency","100.0:240.0","100.0",""
"gui_operation_mode","Operation mode","0:direct {2:feedback compensation bonding}","0","Specifies the feedback operation mode for FPLL."
"gui_iqtxrxclk_outclk_index","Specifies which core outclk to be used as feedback source","0 1 2 3","0","Specifies the feedback source for IQTXRXCLK operation mode."
"gui_refclk_cnt","Number of PLL reference clocks","1 2 3 4 5","1","Specifies the number of input reference clocks for the FPLL."
"gui_refclk_index","Selected reference clock source","0","0","Specifies the initially selected reference clock input to the FPLL."
"gui_enable_fractional","Enable fractional mode","","false","Enables the fractional frequency synthesis mode. This enables the PLL to output frequencies which are not integral multiples of the input reference clock."
"gui_enable_manual_hssi_counters","Enable manual counter configuration","","false","Selecting this option allows you to manually specify M,N, C and L counter values."
"enable_cascade_in","Enable ATX to FPLL cascade clock input port","{0 1}","0","Enables the ATX to FPLL cascade clock input port. This port should only be used to drive the FPLL from the cascaded output clock port of an ATX PLL."
"enable_analog_resets","Enable pll_powerdown and mcgb_rst connections","{0 1}","0","INTERNAL USE ONLY. When selected, the pll_powerdown and mcgb_rst input ports will be connected internally in the IP. Otherwise and by default these ports are made present but have no affect when asserted."
"gui_enable_pld_cal_busy_port","enable_pld_fpll_cal_busy_port","0 1","1",""
"gui_enable_hip_cal_done_port","Enable calibration status ports for HIP","{0 1}","0","Enables calibration status port from PLL and Master CGB(if enabled) for HIP"
"gui_hip_cal_en","Enable PCIe hard IP calibration","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter prioritizes the calibration for PCIe hard IP channels"
"gui_enable_cascade_out","Enable cascade clock output port (FPLL to FPLL cascading)","","false","Enables the cascade clock output port for FPLL to FPLL cascading"
"gui_cascade_outclk_index","Specifies which core outclk to be used as cascading source","0 1 2 3","0","Specifies the cascading source for FPLL to FPLL cascading."
"gui_enable_dps","Enable access to dynamic phase shift ports","","false","Enables access to dynamic phase shift ports. When this option is selected, phase_reset, phase_en, updn, cntsel[3:0], reconfig_avmm,phase_done ports are enabled."
"gui_enable_manual_config","Enable physical output clock parameters","","false","Selecting this option allows you to manually specify M,N and C counter values."
"gui_hssi_output_clock_frequency","PLL output frequency","","1250.0",""
"gui_pll_m_counter","Multiply factor (M-counter)","-2147483648:2147483647","1","Specifies the multiply factor (M counter)"
"gui_pll_n_counter","Divide factor (N-counter)","-2147483648:2147483647","1","Specifies the divide factor (N counter)"
"gui_fractional_x","Fractional factor (x)","-2147483648:2147483647","32","Specifies the fractional x factor (x counter)"
"gui_pll_dsm_fractional_division","Fractional multiply factor (K)","","1","Specifies the fractional multiply factor (K counter)"
"gui_pll_c_counter_0","Divide factor (C-counter 0)","1:256","1","Specifies the divide factor (C-counter 0)"
"gui_pll_c_counter_1","Divide factor (C-counter 1)","1:256","1","Specifies the divide factor (C-counter 1)"
"gui_pll_c_counter_2","Divide factor (C-counter 2)","1:256","1","Specifies the divide factor (C-counter 2)"
"gui_pll_c_counter_3","Divide factor (C-counter 3)","1:256","1","Specifies the divide factor (C-counter 3)"
"gui_number_of_output_clocks","Number of clocks","1 2 3 4","1","Specifies the number of output clocks required in the FPLL design."
"gui_enable_phase_alignment","Enable phase alignment","","false","Enables phase alignment."
"phase_alignment_check_var","Core mode phase alignment frequency check variable","","false","Variable used for frequency check in core mode phase alignment."
"gui_desired_outclk0_frequency","Desired frequency","","100.0","Specifies requested value for output clock frequency"
"gui_actual_outclk0_frequency","Actual frequency","100.0:N/A","100.0","Specifies actual value for output clock frequency"
"gui_outclk0_phase_shift_unit","Phase shift units","0:ps 1:degrees","0","Specifies phase shift in degrees or picoseconds"
"gui_outclk0_desired_phase_shift","Phase shift","","0.0","Specifies requested value for phase shift"
"gui_outclk0_actual_phase_shift","Actual phase shift","0.0:N/A","0.0","Specifies actual value for phase shift"
"gui_outclk0_actual_phase_shift_deg","Actual phase shift","0.0:N/A","0.0","Specifies actual value for phase shift"
"gui_desired_outclk1_frequency","Desired frequency","","100.0","Specifies requested value for output clock frequency"
"gui_actual_outclk1_frequency","Actual frequency","100.0:N/A","100.0","Specifies actual value for output clock frequency"
"gui_outclk1_phase_shift_unit","Phase shift units","0:ps 1:degrees","0","Specifies phase shift in degrees or picoseconds"
"gui_outclk1_desired_phase_shift","Phase shift","-2147483648:2147483647","0","Specifies requested value for phase shift"
"gui_outclk1_actual_phase_shift","Actual phase shift","0.0:N/A","0.0","Specifies actual value for phase shift"
"gui_outclk1_actual_phase_shift_deg","Actual phase shift","0.0:N/A","0.0","Specifies actual value for phase shift"
"gui_desired_outclk2_frequency","Desired frequency","","100.0","Specifies requested value for output clock frequency"
"gui_actual_outclk2_frequency","Actual frequency","100.0:N/A","100.0","Specifies actual value for output clock frequency"
"gui_outclk2_phase_shift_unit","Phase shift units","0:ps 1:degrees","0","Specifies phase shift in degrees or picoseconds"
"gui_outclk2_desired_phase_shift","Phase shift","-2147483648:2147483647","0","Specifies requested value for phase shift"
"gui_outclk2_actual_phase_shift","Actual phase shift","{0 ps:N/A}","0 ps","Specifies actual value for phase shift"
"gui_outclk2_actual_phase_shift_deg","Actual phase shift","{0 deg:N/A}","0 deg","Specifies actual value for phase shift"
"gui_desired_outclk3_frequency","Desired frequency","","100.0","Specifies requested value for output clock frequency"
"gui_actual_outclk3_frequency","Actual frequency","100.0:N/A","100.0","Specifies actual value for output clock frequency"
"gui_outclk3_phase_shift_unit","Phase shift units","0:ps 1:degrees","0","Specifies phase shift in degrees or picoseconds"
"gui_outclk3_desired_phase_shift","Phase shift","-2147483648:2147483647","0","Specifies requested value for phase shift"
"gui_outclk3_actual_phase_shift","Actual phase shift","0.0:N/A","0.0","Specifies actual value for phase shift"
"gui_outclk3_actual_phase_shift_deg","Actual phase shift","0.0:N/A","0.0","Specifies actual value for phase shift"
"gui_desired_hssi_cascade_frequency","Desired frequency","","100.0","Specifies the requested value for output clock frequency"
"set_altera_xcvr_fpll_a10_calibration_en","Enable calibration","{0 1}","1","Enable transceiver calibration algorithms."
"support_mode","Support mode","user_mode engineering_mode","user_mode","Specifies the desired support mode. Note that engineering mode is available for internal-use only."
"enable_mcgb","Include Master Clock Generation Block","{0 1}","0","When enabled Master CGB will be included as part of the IP. PLL output will feed the Master CGB input."
"mcgb_div","Clock division factor","1 2 4 8","1","Divides the Master CGB clock input before generating bonding clocks."
"enable_hfreq_clk","Enable x6/xN non-bonded high-speed clock output port","{0 1}","0","This output port can be used to access x6/xN clock lines for non-bonded designs"
"enable_mcgb_pcie_clksw","Enable PCIe clock switch interface","{0 1}","0","Enables the control signals for PCIe clock switch circuitry"
"mcgb_aux_clkin_cnt","Number of auxiliary MCGB clock input ports.","0","0","Auxiliary input is intended for PCIe Gen3, hence not available in FPLL"
"enable_bonding_clks","Enable bonding clock output ports","{0 1}","0","Should be enable for bonded designs"
"enable_fb_comp_bonding","Enable feedback compensation bonding","{0 1}","0",""
"pma_width","PMA interface width","8 10 16 20 32 40 64","64","PMA-PCS Interface width. Proper value must be selected for bonding clocks to be generated properly for Native PHY IP."
"enable_pld_mcgb_cal_busy_port","enable_pld_mcgb_cal_busy_port","0 1","0",""
