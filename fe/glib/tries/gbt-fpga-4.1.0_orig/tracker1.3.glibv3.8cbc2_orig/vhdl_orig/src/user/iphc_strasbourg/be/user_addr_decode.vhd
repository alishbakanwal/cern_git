-- Address decode logic for ipbus fabric
--
-- This file will be AUTOGENERATED from the address table - do not hand edit
--
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
--
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;
use work.ipbus.all;
use work.user_package.all;

package user_addr_decode is

  function user_wb_addr_sel (signal addr : in std_logic_vector(31 downto 0)) return integer;
  function user_ipb_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer;

end user_addr_decode;

package body user_addr_decode is

  function user_wb_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer is
    variable sel : integer;
  begin
		--              addr, "00------------------------------" is reserved
		--              addr, "01------------------------------" is reserved
		if    std_match(addr, "100000000000000000000000--------") then  	sel := user_wb_be; --user_wb_regs;
		elsif std_match(addr, "10000000000000000000000100000000") then		sel := user_wb_timer; -- xx
		elsif std_match(addr, "1000000000000000000000011-------") then		sel := user_wb_ttc_fmc_regs; --see user_package.vhd

		else	--x"80000180"
			sel := 99;
		end if;
		return sel;
	end user_wb_addr_sel;

  function user_ipb_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer is
    variable sel : integer;
  begin
		--if 2  ko !!

		if std_match(addr, "010000000000000000000000--------") then sel := user_ipb_regs; --see user_package.vhd
		else	
			sel := 99;
		end if;




		return sel;
		
	end user_ipb_addr_sel;

end user_addr_decode;
