--=================================================================================================--
--##################################   Module Information   #######################################--
--=================================================================================================--
--                                                                                         
-- Company:               CERN (PH-ESE-BE)                                                         
-- Engineer:              Manoel Barros Marin (manoel.barros.marin@cern.ch) (m.barros.marin@ieee.org)
--                                                                                                 
-- Project Name:          GBT-FPGA                                                                
-- Module Name:           AMC40 - GBT Bank example design                                        
--                                                                                                 
-- Language:              VHDL'93                                                                  
--                                                                                                   
-- Target Device:         AMC40 (Altera Stratix V)                                                       
-- Tool version:          Quartus II 13.1                                                                
--                                                                                                   
-- Version:               3.0                                                                      
--
-- Description:            
--
-- Versions history:      DATE         VERSION   AUTHOR            DESCRIPTION
--
--                        23/03/2013   3.0       M. Barros Marin   First .vhd module definition           
--
-- Additional Comments:   Note!! This example design instantiates two GBt Banks:
--
--                               - GBT Bank 1: One GBT Link (Standard GBT TX and Latency-Optimized GBT RX)
--
--                               - GBT Bank 2: Three GBT Links (Latency-Optimized GBT TX and Standard GBT RX)      
--
-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! IMPORTANT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-- !!                                                                                           !!
-- !! * The different parameters of the GBT Bank are set through:                               !!  
-- !!   (Note!! These parameters are vendor specific)                                           !!                    
-- !!                                                                                           !!
-- !!   - The MGT control ports of the GBT Bank module (these ports are listed in the records   !!
-- !!     of the file "<vendor>_<device>_gbt_bank_package.vhd").                                !! 
-- !!     (e.g. xlx_v6_gbt_bank_package.vhd)                                                    !!
-- !!                                                                                           !!  
-- !!   - By modifying the content of the file "<vendor>_<device>_gbt_bank_user_setup.vhd".     !!
-- !!     (e.g. xlx_v6_gbt_bank_user_setup.vhd)                                                 !! 
-- !!                                                                                           !! 
-- !! * The "<vendor>_<device>_gbt_bank_user_setup.vhd" is the only file of the GBT Bank that   !!
-- !!   may be modified by the user. The rest of the files MUST be used as is.                  !!
-- !!                                                                                           !!  
-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
--                                                                                              
--=================================================================================================--
--#################################################################################################--
--=================================================================================================--

-- IEEE VHDL standard library:
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- Custom libraries and packages:
use work.gbt_bank_package.all;
use work.vendor_specific_gbt_bank_package.all;

--=================================================================================================--
--#######################################   Entity   ##############################################--
--=================================================================================================--

entity devkit_gbt_example_design is   
   port (   
      
      --===============--
      -- General reset --
      --===============--  
      SYS_RESET_N                                             : in  std_logic; 
    
      --===============--
      -- Clocks scheme --
      --===============--
      REF_CLOCK                                            	  : in  std_logic;   -- Comment:  (LHC PLL 120MHz)
      SYS_CLK_100MHz														  : in  std_logic;
		SMA_CLK_OUT															  : out std_logic;
		
      --==============--
      -- Serial lanes --
      --==============--
      
      -- GBT Bank 1:
      --------------
		
      SFP_TX                                                  : out std_logic;
      SFP_RX                                           		  : in  std_logic;
		
		SFP_DISABLE															  : out std_logic
		
   );
end devkit_gbt_example_design;

--=================================================================================================--
--####################################   Architecture   ###########################################-- 
--=================================================================================================--

architecture structural of devkit_gbt_example_design is
   
   --================================ Signal Declarations ================================--
   component frameclk_pll is
		port (
			locked   : out std_logic;        -- export
			outclk_0 : out std_logic;        -- clk
			refclk   : in  std_logic := 'X'; -- clk
			rst      : in  std_logic := 'X'  -- reset
		);
	end component frameclk_pll;
	
	component latoptimized_measurements is
		port (
			clk_clk         : in  std_logic                     := 'X';             -- clk
			delay_io_export : in  std_logic_vector(31 downto 0) := (others => 'X'); -- export
			reset_reset_n   : in  std_logic                     := 'X';             -- reset_n
			reset_io_export : out std_logic                                         -- export
		);
	end component latoptimized_measurements;
   --=====================================================================================-- 
	
	signal SYS_CLK_40MHz:	std_logic;
	signal frameclk_locked: std_logic;
	
	signal rx_pol:		std_logic := '1';
	signal loopback:  std_logic := '1';
	signal tx_matchflag: std_logic;
	signal rx_matchflag: std_logic;
	signal reset		 : std_logic;
	signal reset_from_jtag: std_logic;
	signal latdelay: std_logic_vector(31 downto 0);
	signal reset_dataerrorseenflag: std_logic;
	
	CONSTANT SAMPLES_100MHz				: std_logic_vector(31 downto 0) :=	X"05F5E100"; -- (100 MHz clock is 100E6 samples in one second)
	
	component ax_issp is
		port (
			probe  : in  std_logic_vector(2 downto 0) := (others => 'X'); -- probe
			source : out std_logic_vector(2 downto 0)                     -- source
		);
	end component ax_issp;
	
--=================================================================================================--
begin                 --========####   Architecture Body   ####========-- 
--=================================================================================================--
   
   --==================================== User Logic =====================================--


       --#############################################################################--
     --#################################################################################--
   --#############################                           #############################--
   --#############################  GBT Bank example design  #############################--
   --#############################                           #############################--
     --#################################################################################--
       --#############################################################################--
   
	SFP_DISABLE <= '0';
	
	--=====================================--
	-- clock measurement                   --
	--=====================================--
	measure_refclk_inst : entity work.measure_refclk
	GENERIC MAP(
		CYC_MEASURE_CLK_IN_1_SEC	=> SAMPLES_100MHz
	)
	port MAP(
		RefClock				=> REF_CLOCK,
		Measure_Clk			=> SYS_CLK_100MHz,
		reset					=> not(frameclk_locked),
		RefClock_Measure	=> open
	);
	
   --=====================================--
   -- Stratix V - GBT Bank example design --
   --=====================================--
   frameclk_pll_inst: frameclk_pll
		port map(
			locked   => frameclk_locked,
			outclk_0 => SYS_CLK_40MHz,
			refclk   => REF_CLOCK,
			rst      => not(SYS_RESET_N)
		);
   
	gbtExmplDsgn_inst: entity work.alt_ax_gbt_example_design
		generic map(
			NUM_LINKS									=> 1,
			TX_OPTIMIZATION							=> LATENCY_OPTIMIZED,
			RX_OPTIMIZATION							=> LATENCY_OPTIMIZED,
			TX_ENCODING									=> GBT_FRAME,
			RX_ENCODING									=> GBT_FRAME
		)
      port map (

		--==============--
		-- Clocks       --
		--==============--
		FRAMECLK_40MHZ							=> SYS_CLK_40MHz,
		XCVRCLK									=> REF_CLOCK,
		
		--==============--
		-- Reset        --
		--==============--
		GBTBANK_GENERAL_RESET_I				=> not(frameclk_locked) or reset_from_jtag,
		GBTBANK_MANUAL_RESET_TX_I			=> '0',
		GBTBANK_MANUAL_RESET_RX_I			=> '0',
		
		--==============--
		-- Serial lanes --
		--==============--
		GBTBANK_MGT_RX(1)						=> SFP_RX,
		GBTBANK_MGT_TX(1)						=> SFP_TX,
		
		--==============--
		-- Data			 --
		--==============--		
		GBTBANK_GBT_DATA_I(1)									=> (others => '0'),
		GBTBANK_WB_DATA_I(1)										=> (others => '0'),
		
		GBTBANK_GBT_DATA_O										=> open,
		GBTBANK_WB_DATA_O											=> open,
		
		--==============--
		-- Reconf.		 --
		--==============--
		GBTBANK_RECONF_AVMM_RST									=> '0',
		GBTBANK_RECONF_AVMM_CLK									=> SYS_CLK_100MHz,
		GBTBANK_RECONF_AVMM_ADDR								=> (others => '0'),
		GBTBANK_RECONF_AVMM_READ								=> '0',
		GBTBANK_RECONF_AVMM_WRITE								=> '0',
		GBTBANK_RECONF_AVMM_WRITEDATA							=> (others => '0'),
		GBTBANK_RECONF_AVMM_READDATA							=> open,
		GBTBANK_RECONF_AVMM_WAITREQUEST						=> open,
		
		--==============--
		-- TX ctrl	    --
		--==============--
		GBTBANK_TX_ISDATA_SEL_I(1)			=> '1',
		GBTBANK_TEST_PATTERN_SEL_I			=> "01",
		
		--==============--
		-- RX ctrl      --
		--==============--
		GBTBANK_RESET_GBTRXREADY_LOST_FLAG_I(1)     => '0',
		GBTBANK_RESET_DATA_ERRORSEEN_FLAG_I(1)      => reset_dataerrorseenflag,
		
		--==============--
		-- TX Status    --
		--==============--
		--GBTBANK_GBTTX_READY_O(1)				=> open,
		--GBTBANK_GBTRX_READY_O(1)				=> gbtBank1_gbtRxReady_from_gbtExmplDsgn,
		--GBTBANK_LINK_TX1_READY_O(1)			=> open,
		--GBTBANK_LINK_RX1_READY_O(1)			=> open,
		--GBTBANK_LINK_READY_O(1)					=> gbtBank1_mgtReady_from_gbtExmplDsgn,
		--GBTBANK_LINK1_BITSLIP_O           	=> gbtBank1_rxBitSlipNbr_from_gbtExmplDsgn,
		GBTBANK_TX_MATCHFLAG_O					=> tx_matchflag,
		
		--==============--
		-- RX Status    --
		--==============--
		--GBTBANK_GBTRXREADY_LOST_FLAG_O(1)               => gbtBank1_gbtRxReadyLostFlag_from_gbtExmplDsgn,
		--GBTBANK_RXDATA_ERRORSEEN_FLAG_O(1)              => gbtBank1_rxDataErrorSeen_from_gbtExmplDsgn,
		--GBTBANK_RXEXTRADATA_WIDEBUS_ERRORSEEN_FLAG_O(1) => gbtBank1_rxExtrDataWidebusErSeen_from_gbtExmplDsgn,
		GBTBANK_RX_MATCHFLAG_O(1)				=> rx_matchflag,
		--
		--RX_FRAMECLK_O(1)			  								=> gbtBank1_rxFrameClk_from_gbtExmplDsgn,
		
		--==============--
		-- XCVR ctrl    --
		--==============--
		GBTBANK_LOOPBACK_I(1)					=> loopback,
		
		GBTBANK_TX_POL								=> (others => '0'),
		GBTBANK_RX_POL(1)							=> rx_pol,
		
		GBTBANK_TXWORDCLKMON_EN					=>	'1'	
   );
	
	gbtBank1_inSysSrcAndPrb: ax_issp
      port map (
         PROBE(0)                                             => loopback,
			PROBE(1)															  => rx_pol,
			PROBE(2)															  => reset_dataerrorseenflag,
         SOURCE(0)                                            => loopback,
         SOURCE(1)                                            => rx_pol,
         SOURCE(2)                                            => reset_dataerrorseenflag
      );
		
	latencymeas_inst: entity work.pattern_matchflag_delaymeas   
		port map(   
			RESET_I               => reset_from_jtag,
			CLK_I                 => REF_CLOCK,
			TX_MATCHFLAG_I        => tx_matchflag,
			RX_MATCHFLAG_I        => rx_matchflag,
			DELAY_O				    => latdelay
		);
	
	latoptimized_ctrl_inst: latoptimized_measurements
		port map (
			clk_clk         => SYS_CLK_100MHz,    -- clk
			delay_io_export => latdelay,          -- export
			reset_reset_n   => SYS_RESET_N,       -- reset_n
			reset_io_export => reset_from_jtag    -- export
		);
		
	SMA_CLK_OUT <= tx_matchflag or rx_matchflag;
   --=====================================================================================--   
end structural;
--=================================================================================================--
--#################################################################################################--
--=================================================================================================--